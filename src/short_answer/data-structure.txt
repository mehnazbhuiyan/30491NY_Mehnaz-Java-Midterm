***ANSWER ALL OF THE QUESTIONS BELOW***

Why do we need data structure?
Answer: Data Structures are necessary for designing efficient algorithms. It provides reusability and abstraction.

What are the various operations that can be performed on different data structures?
Answer:

When would we use data structures in the real world?
Answer: Traversing, searching, inserting, deleting, sorting, merging.

What is an Array?
Answer :An array is a container object that holds a fixed number of values of a single type.

What is the difference between Array and ArrayList?
Answer: Array is a fixed length once it is created while ArrayList length can be changed.

What is a LinkedList?
Answer: A LinkedList is a data structure where the objects are arranged in a linear order. It consists of nodes where
each node contains a data field and a reference(link) to the next node in the list.

How is an Array different from LinkedList?
Answer: An array is a collection of elements of a similar data type. A linked list is a collection of objects known as a
node where node consists of two parts, i.e., data and address. Array elements store in a contiguous memory location.
Linked list elements can be stored anywhere in the memory or randomly stored.

What is a Queue?
Answer:

What is a Stack (referring to data structures)?
Answer:

What is FIFO and LIFO?
Answer:

Explain Big O Notation?
Answer:

What is the best case to search an element from an array?
Answer:

What is the worst case to search an element from an array?
Answer:

Describe what a tree data structure is?
Answer:

Describe what a graph data structure is?
Answer:

What is the difference between the HashTable and HashMap?
Answer:

How do HashMaps work in Java? How do they store values, and when are they useful?
Answer:

What is ArrayIndexOutOfBoundsException in java? When does it occur?
Answer:

What are the different ways of copying an array into another array?
Answer:

What is DFS and BFS?
Answer:

What is Recursion?
Answer:

What are linear and non-linear data Structures?
Answer:

Outline different sorting algorithms and their time complexities:

