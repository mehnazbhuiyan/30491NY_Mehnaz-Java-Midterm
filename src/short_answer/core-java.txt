***ANSWER ALL OF THE QUESTIONS BELOW***

What is a programming language?
Answer: A programming language is a vocabulary and set of grammatical rules
for instructing a computer or computer device to perform specific tasks.

What is a JDK composed of? Define each components?
Answer: JDK, also known as "Java Development Kit" is composed of the JRE and several
development tools, an interpreter (java), compiler (javac), an archiver (jar), and a
documentation generator (javadoc). JRE stands for java runtime environment. This environment is used
ony to run code, not to develop. Java then interprets and compiles that code to machine language so
the machine understands it. The archiver aggregates the many files into one. Javadoc is a document
generator tool for generating standard documentation in HTML format.


What is an IDE?
Answer: Integrated development environment is a software application that helps programmers develop
software code efficiently. It contains a code editor, a compiler or editor, and a debugger. This application
increases developer productivity by combining these capabilities.

What are some of the most popular Java IDEs available in the market?
Answer: IntelliJ, Eclipse, Visual Studio

Explain the entire java life cycle.
Answer: The first stage in the java life cycle begins with writing your code in the IDE. Next, your source file code (.java file)
is passed through the java compiler and gets converted into bytecode so the machine can understand your code in their language. The
content of each class inside your source file is stored as a separate ".class" file. The class files generated by the compiler are
independent meaning they can run on any OS. In order to run, the main class file is passed to the JVM and then goes through three main
before the final machine code is executed: ClassLoader, ByteCode Verifier, Just-in-time Compiler. Finally, the final machine code is executed.


What is a class?
Answer: A class is the blueprint for creating objects and defining object data types and methods

What is an object?
Answer: A member or instance of the class.

What is the entry point of a Java project?
Answer: The Main method.

Why is the main() method static?
Answer: It belongs to the class itself.

Which class is the superclass of all classes?
Answer: The parent class.

What is difference between path and classpath variables?
Answer: Path is set for java tools in java programs like java and javac, which are used to compile
your ode. Classpath is used by System or Application class loader to locate and load compile Java
bytecodes in the .class file.

What is the difference between an Interface and Abstract class?
Answer: Abstract class can be made up of abstract and concrete methods. Interface class can only be
composed of abstract methods.

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer: No you cannot because both of these classes have abstract methods and you cannot create
objects here because they cannot have blocks of code. In order o create an object, these classes
need to have subclasses where they can implement the methods.

What is Access Modifier?
Answer: Keywords in object-oriented languages that set the accessibility of classes, methods, and other members.

What is OOP? Define each OOP concept.
Answer: OOP stands for object-oriented programming.

What is Java Package and which package is imported by default?
Answer:

What is an API? List some API's that you have used so far.
Answer:

Does java support multiple inheritance? Why or why not?
Answer:

What is method overloading? List all of the different ways to overload.
Answer:

Explain exceptions in java and how to handle them.
Answer:

What is static keyword? When and how do we use it?
Answer:

What is final keyword? When and how do we use it?
Answer:

Explain the difference between final, finally and finalize?
Answer:

What is a constructor?
Answer:

Can we have multiple constructors in a class?
Answer:

If we don't have a constructor declared, what is called during the object creation?
Answer:

What is "this" keyword in Java? When would we use it?
Answer:

What is "super" keyword in Java? What are some scenarios we would use it?
Answer:

What does JVM stand for?
Answer:

Is JVM platform independent?
Answer:

What version of Java are you using?
Answer:

What does JAR stand for?
Answer:

What is the difference between JDK and JVM?
Answer:

What is the difference between JVM and JRE?
Answer:

Explain the difference between compile-time and run-time?
Answer:

What is heap?
Answer:

How does Java manage its memory?
Answer:

What is the difference between String, StringBuffer and StringBuilder?
Answer:

What is Singleton class?
Answer:

What is Serialization and Deserialization?
Answer:

Explain the difference between While and Do..While loops?
Answer:

What is Enum?
Answer:

What is Iterator?
Answer:

Which one will take more memory: an int or Integer? Why?
Answer:

Why are Strings considered to be immutable in Java?
Answer:

What is constructor chaining in Java?
Answer:

The difference between Serial and Parallel Garbage Collector?
Answer:

What does JIT stands for?
Answer:

Explain the process of Java garbage collection?
Answer:

Can you guarantee the garbage collection process?
Answer:

What is the difference between stack and heap in Java?
Answer:

What is reflection in Java and why is it useful?
Answer:

What is multithreading in Java?
Answer:

What is synchronization in Java?
Answer:

What is a Framework?
Answer:

What are the testing Frameworks available in Java?
Answer:

What are jUnit and testNG?
Answer:

What are the dependencies for this project?
Answer:

What is dependency injection in Java?
Answer:

Explain what static binding and dynamic binding is?
Answer: